{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DecodeTx","useState","error","setError","txn","setTxn","text","setText","TextField","label","multiline","rows","value","onChange","event","target","fullWidth","style","paddingBottom","Button","variant","onClick","txData","toBuffer","f","TransactionFactory","fromSerializedData","JSON","stringify","toJSON","err","message","disabled","overflowY","border","padding","marginTop","Alert","severity","Box","Typography","href","DecodeError","errorMsg","setErrorMsg","errorText","setErrorText","startsWith","abiCoder","utils","AbiCoder","decode","replace","DecodeFunction","abi","setAbi","data","setData","result","setResult","float","defaultValue","iface","Interface","parse","selector","substring","fragment","getFunction","_res","decodeFunctionData","App","AppBar","position","Toolbar","flex","to","color","textDecoration","component","marginLeft","Link","rel","IconButton","aria-label","fontSize","Container","exact","path","exect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acedd87f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@mui/material/Alert\";\nimport Link from \"@mui/material/Link\";\nimport IconButton from \"@mui/material/IconButton\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Box from \"@mui/material/Box\";\nimport { TransactionFactory } from \"@ethereumjs/tx\";\nimport { toBuffer } from \"ethereumjs-util\";\nimport { utils } from \"ethers\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link as RLink,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <div style={{ flex: \"auto\" }}>\n              <RLink to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\n                <Typography variant=\"h5\" component=\"span\">\n                  Decode Ethereum serialized transaction\n                </Typography>\n              </RLink>\n              <RLink\n                to=\"/error-decode\"\n                style={{\n                  color: \"white\",\n                  textDecoration: \"none\",\n                  marginLeft: 20,\n                }}\n              >\n                <Typography variant=\"h6\" component=\"span\">\n                  Decode error\n                </Typography>\n              </RLink>\n              <RLink\n                to=\"/function-decode\"\n                style={{\n                  color: \"white\",\n                  textDecoration: \"none\",\n                  marginLeft: 20,\n                }}\n              >\n                <Typography variant=\"h6\" component=\"span\">\n                  Decode function\n                </Typography>\n              </RLink>\n            </div>\n            <Link\n              href=\"//github.com/aquiladev/decode-eth-tx\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <IconButton\n                color=\"default\"\n                aria-label=\"GitHub repo\"\n                component=\"span\"\n              >\n                <GitHubIcon fontSize=\"default\" style={{ color: \"white\" }} />\n              </IconButton>\n            </Link>\n          </Toolbar>\n        </AppBar>\n        <Container style={{ marginTop: 20 }}>\n          <Switch>\n            <Route exact path=\"/\">\n              <DecodeTx />\n            </Route>\n            <Route path=\"/error-decode\">\n              <DecodeError />\n            </Route>\n            <Route exect path=\"/function-decode\">\n              <DecodeFunction />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nfunction DecodeTx() {\n  const [error, setError] = useState();\n  const [txn, setTxn] = useState();\n  const [text, setText] = useState();\n\n  const handleChange = (event) => {\n    setError();\n    setTxn();\n    setText(event.target.value);\n  };\n\n  const handleDecode = () => {\n    try {\n      if (!text) return;\n      const txData = toBuffer(text);\n      const f = TransactionFactory.fromSerializedData(txData);\n      setTxn(JSON.stringify(f.toJSON(), null, 2));\n    } catch (err) {\n      setError(err?.message);\n    }\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Raw Txn\"\n        multiline\n        rows={4}\n        value={text}\n        onChange={handleChange}\n        fullWidth\n        style={{ paddingBottom: 20 }}\n      />\n      <Button variant=\"contained\" onClick={handleDecode} disabled={!text}>\n        Decode\n      </Button>\n      {txn && (\n        <div\n          style={{\n            overflowY: \"scroll\",\n            border: \"1px dashed grey\",\n            padding: \"0 13px\",\n            marginTop: 20,\n          }}\n        >\n          <pre>{txn}</pre>\n        </div>\n      )}\n      {error && (\n        <Alert severity=\"error\" style={{ marginTop: 20 }}>\n          {error}\n        </Alert>\n      )}\n      <Box style={{ marginTop: 20 }}>\n        <Typography variant=\"h6\">Features:</Typography>\n        <p>\n          # The dApp supports{\" \"}\n          <a href=\"https://eips.ethereum.org/EIPS/eip-1559\">EIP-1559</a> and{\" \"}\n          <a href=\"https://eips.ethereum.org/EIPS/eip-2930\">EIP-2930</a>{\" \"}\n          transactions\n        </p>\n      </Box>\n    </>\n  );\n}\n\nfunction DecodeError() {\n  const [errorMsg, setErrorMsg] = useState();\n  const [errorText, setErrorText] = useState();\n\n  const handleChangeError = (event) => {\n    setErrorText();\n    setErrorMsg(event.target.value);\n  };\n\n  const handleDecodeError = () => {\n    if (errorMsg.startsWith(\"0x08c379a0\")) {\n      const abiCoder = new utils.AbiCoder();\n      setErrorText(\n        abiCoder.decode([\"string\"], errorMsg.replace(\"0x08c379a0\", \"0x\"))\n      );\n    } else {\n      setErrorText(\"== NOT POSSIBLE TO DECODE ==\");\n    }\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Error\"\n        multiline\n        rows={4}\n        value={errorMsg}\n        onChange={handleChangeError}\n        fullWidth\n        style={{ paddingBottom: 20 }}\n      />\n      <Button\n        variant=\"contained\"\n        onClick={handleDecodeError}\n        disabled={!errorMsg}\n      >\n        Decode Error\n      </Button>\n      {errorText && (\n        <div\n          style={{\n            overflowY: \"scroll\",\n            border: \"1px dashed grey\",\n            padding: \"0 13px\",\n            marginTop: 20,\n          }}\n        >\n          <pre>{errorText}</pre>\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction DecodeFunction() {\n  const [abi, setAbi] = useState(\n    '[\"function transferFrom(address from, address to, uint amount)\"]'\n  );\n  const [data, setData] = useState();\n  const [result, setResult] = useState();\n\n  const handleChangeABI = (event) => {\n    setResult();\n    setAbi(event.target.value);\n  };\n\n  const handleChangeData = (event) => {\n    setResult();\n    setData(event.target.value);\n  };\n\n  const handleDecodeData = () => {\n    try {\n      const iface = new utils.Interface(JSON.parse(abi));\n      const selector = data.substring(0, 10);\n\n      const fragment = iface.getFunction(selector);\n      const _res = iface.decodeFunctionData(fragment, data);\n      setResult(JSON.stringify(_res, null, 2));\n    } catch (err) {\n      setResult(\"ERROR: \" + err.message);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ float: \"right\" }}>\n        Inrerface{\" \"}\n        <a href=\"https://docs.ethers.io/v5/api/utils/abi/interface/#Interface--creating\">\n          exemple\n        </a>\n      </div>\n      <TextField\n        label=\"Interface\"\n        multiline\n        rows={4}\n        value={abi}\n        defaultValue={abi}\n        onChange={handleChangeABI}\n        fullWidth\n        style={{ paddingBottom: 20 }}\n      />\n      <TextField\n        label=\"Data\"\n        multiline\n        rows={4}\n        value={data}\n        onChange={handleChangeData}\n        fullWidth\n        style={{ paddingBottom: 20 }}\n      />\n      <Button variant=\"contained\" onClick={handleDecodeData} disabled={!data}>\n        Decode Function\n      </Button>\n      {result && (\n        <div\n          style={{\n            overflowY: \"scroll\",\n            border: \"1px dashed grey\",\n            padding: \"0 13px\",\n            marginTop: 20,\n          }}\n        >\n          <pre>{result}</pre>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactGA.initialize('UA-215305995-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}